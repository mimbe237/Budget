"""
✨ `Account_KeyOutput` returns the primary key fields of table type `Account`.

It has the same format as `Account_Key`, but is only used as mutation return value.
"""
scalar Account_KeyOutput
"""
✨ `Budget_KeyOutput` returns the primary key fields of table type `Budget`.

It has the same format as `Budget_Key`, but is only used as mutation return value.
"""
scalar Budget_KeyOutput
"""
✨ `Category_KeyOutput` returns the primary key fields of table type `Category`.

It has the same format as `Category_Key`, but is only used as mutation return value.
"""
scalar Category_KeyOutput
"""
✨ `Transaction_KeyOutput` returns the primary key fields of table type `Transaction`.

It has the same format as `Transaction_Key`, but is only used as mutation return value.
"""
scalar Transaction_KeyOutput
"""
✨ `User_KeyOutput` returns the primary key fields of table type `User`.

It has the same format as `User_Key`, but is only used as mutation return value.
"""
scalar User_KeyOutput
"""
✨ Generated data input type for table 'Account'. It includes all necessary fields for creating or upserting rows into table.
"""
input Account_Data {
  """
  ✨ Generated from Field `Account`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Account`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Account`.`userId` of type `UUID!`
  """
  userId: UUID
  """
  ✨ `_expr` server value variant of `userId` (✨ Generated from Field `Account`.`userId` of type `UUID!`)
  """
  userId_expr: UUID_Expr
  """
  ✨ Generated from Field `Account`.`user` of type `User!`
  """
  user: User_Key
  """
  ✨ Generated from Field `Account`.`accountType` of type `String!`
  """
  accountType: String
  """
  ✨ `_expr` server value variant of `accountType` (✨ Generated from Field `Account`.`accountType` of type `String!`)
  """
  accountType_expr: String_Expr
  """
  ✨ Generated from Field `Account`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `Account`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `Account`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `Account`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Account`.`currency` of type `String`
  """
  currency: String
  """
  ✨ `_expr` server value variant of `currency` (✨ Generated from Field `Account`.`currency` of type `String`)
  """
  currency_expr: String_Expr
  """
  ✨ Generated from Field `Account`.`initialBalance` of type `Float`
  """
  initialBalance: Float
  """
  ✨ `_expr` server value variant of `initialBalance` (✨ Generated from Field `Account`.`initialBalance` of type `Float`)
  """
  initialBalance_expr: Float_Expr
  """
  ✨ `_update` server value variant of `initialBalance` (✨ Generated from Field `Account`.`initialBalance` of type `Float`)
  """
  initialBalance_update: [Float_Update!]
  """
  ✨ Generated from Field `Account`.`name` of type `String!`
  """
  name: String
  """
  ✨ `_expr` server value variant of `name` (✨ Generated from Field `Account`.`name` of type `String!`)
  """
  name_expr: String_Expr
}
"""
✨ Generated filter input type for table 'Account'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Account_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Account_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Account_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Account_Filter!]
  """
  ✨ Generated from Field `Account`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Account`.`userId` of type `UUID!`
  """
  userId: UUID_Filter
  """
  ✨ Generated from Field `Account`.`user` of type `User!`
  """
  user: User_Filter
  """
  ✨ Generated from Field `Account`.`accountType` of type `String!`
  """
  accountType: String_Filter
  """
  ✨ Generated from Field `Account`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `Account`.`currency` of type `String`
  """
  currency: String_Filter
  """
  ✨ Generated from Field `Account`.`initialBalance` of type `Float`
  """
  initialBalance: Float_Filter
  """
  ✨ Generated from Field `Account`.`name` of type `String!`
  """
  name: String_Filter
  """
  ✨ Generated from Field `Account`.`transactions_on_account` of type `[Transaction!]!`
  """
  transactions_on_account: Transaction_ListFilter
}
"""
✨ Generated first-row input type for table 'Account'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Account_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Account_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Account_Filter
}
"""
✨ Generated having input type for table 'Account'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Account_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Account_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Account_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Account_Having!]
  """
  ✨ Generated from Field `Account`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Account`.`accountType_count` of type `Int!`
  """
  accountType_count: Int_Filter
  """
  ✨ Generated from Field `Account`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `Account`.`currency_count` of type `Int!`
  """
  currency_count: Int_Filter
  """
  ✨ Generated from Field `Account`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Account`.`initialBalance_count` of type `Int!`
  """
  initialBalance_count: Int_Filter
  """
  ✨ Generated from Field `Account`.`name_count` of type `Int!`
  """
  name_count: Int_Filter
  """
  ✨ Generated from Field `Account`.`userId_count` of type `Int!`
  """
  userId_count: Int_Filter
  """
  ✨ Generated from Field `Account`.`initialBalance_sum` of type `Float`
  """
  initialBalance_sum: Float_Filter
  """
  ✨ Generated from Field `Account`.`initialBalance_avg` of type `Float`
  """
  initialBalance_avg: Float_Filter
  """
  ✨ Generated from Field `Account`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Account`.`initialBalance_min` of type `Float`
  """
  initialBalance_min: Float_Filter
  """
  ✨ Generated from Field `Account`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `Account`.`initialBalance_max` of type `Float`
  """
  initialBalance_max: Float_Filter
}
"""
✨ Generated key input type for table 'Account'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Account_Key {
  """
  ✨ Generated from Field `Account`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Account`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Account'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Account_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Account_Filter
}
"""
✨ Generated order input type for table 'Account'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Account_Order {
  """
  ✨ Generated from Field `Account`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Account`.`userId` of type `UUID!`
  """
  userId: OrderDirection
  """
  ✨ Generated from Field `Account`.`user` of type `User!`
  """
  user: User_Order
  """
  ✨ Generated from Field `Account`.`accountType` of type `String!`
  """
  accountType: OrderDirection
  """
  ✨ Generated from Field `Account`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `Account`.`currency` of type `String`
  """
  currency: OrderDirection
  """
  ✨ Generated from Field `Account`.`initialBalance` of type `Float`
  """
  initialBalance: OrderDirection
  """
  ✨ Generated from Field `Account`.`name` of type `String!`
  """
  name: OrderDirection
  """
  ✨ Generated from Field `Account`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `Account`.`accountType_count` of type `Int!`
  """
  accountType_count: OrderDirection
  """
  ✨ Generated from Field `Account`.`createdAt_count` of type `Int!`
  """
  createdAt_count: OrderDirection
  """
  ✨ Generated from Field `Account`.`currency_count` of type `Int!`
  """
  currency_count: OrderDirection
  """
  ✨ Generated from Field `Account`.`id_count` of type `Int!`
  """
  id_count: OrderDirection
  """
  ✨ Generated from Field `Account`.`initialBalance_count` of type `Int!`
  """
  initialBalance_count: OrderDirection
  """
  ✨ Generated from Field `Account`.`name_count` of type `Int!`
  """
  name_count: OrderDirection
  """
  ✨ Generated from Field `Account`.`userId_count` of type `Int!`
  """
  userId_count: OrderDirection
  """
  ✨ Generated from Field `Account`.`initialBalance_sum` of type `Float`
  """
  initialBalance_sum: OrderDirection
  """
  ✨ Generated from Field `Account`.`initialBalance_avg` of type `Float`
  """
  initialBalance_avg: OrderDirection
  """
  ✨ Generated from Field `Account`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: OrderDirection
  """
  ✨ Generated from Field `Account`.`initialBalance_min` of type `Float`
  """
  initialBalance_min: OrderDirection
  """
  ✨ Generated from Field `Account`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: OrderDirection
  """
  ✨ Generated from Field `Account`.`initialBalance_max` of type `Float`
  """
  initialBalance_max: OrderDirection
}
"""
✨ Generated data input type for table 'Budget'. It includes all necessary fields for creating or upserting rows into table.
"""
input Budget_Data {
  """
  ✨ Generated from Field `Budget`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Budget`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Budget`.`categoryId` of type `UUID!`
  """
  categoryId: UUID
  """
  ✨ `_expr` server value variant of `categoryId` (✨ Generated from Field `Budget`.`categoryId` of type `UUID!`)
  """
  categoryId_expr: UUID_Expr
  """
  ✨ Generated from Field `Budget`.`userId` of type `UUID!`
  """
  userId: UUID
  """
  ✨ `_expr` server value variant of `userId` (✨ Generated from Field `Budget`.`userId` of type `UUID!`)
  """
  userId_expr: UUID_Expr
  """
  ✨ Generated from Field `Budget`.`category` of type `Category!`
  """
  category: Category_Key
  """
  ✨ Generated from Field `Budget`.`user` of type `User!`
  """
  user: User_Key
  """
  ✨ Generated from Field `Budget`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `Budget`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `Budget`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `Budget`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Budget`.`description` of type `String`
  """
  description: String
  """
  ✨ `_expr` server value variant of `description` (✨ Generated from Field `Budget`.`description` of type `String`)
  """
  description_expr: String_Expr
  """
  ✨ Generated from Field `Budget`.`endDate` of type `Date!`
  """
  endDate: Date
  """
  ✨ `_date` server value variant of `endDate` (✨ Generated from Field `Budget`.`endDate` of type `Date!`)
  """
  endDate_date: Date_Relative
  """
  ✨ `_expr` server value variant of `endDate` (✨ Generated from Field `Budget`.`endDate` of type `Date!`)
  """
  endDate_expr: Date_Expr
  """
  ✨ `_update` server value variant of `endDate` (✨ Generated from Field `Budget`.`endDate` of type `Date!`)
  """
  endDate_update: [Date_Update!]
  """
  ✨ Generated from Field `Budget`.`limitAmount` of type `Float!`
  """
  limitAmount: Float
  """
  ✨ `_expr` server value variant of `limitAmount` (✨ Generated from Field `Budget`.`limitAmount` of type `Float!`)
  """
  limitAmount_expr: Float_Expr
  """
  ✨ `_update` server value variant of `limitAmount` (✨ Generated from Field `Budget`.`limitAmount` of type `Float!`)
  """
  limitAmount_update: [Float_Update!]
  """
  ✨ Generated from Field `Budget`.`name` of type `String!`
  """
  name: String
  """
  ✨ `_expr` server value variant of `name` (✨ Generated from Field `Budget`.`name` of type `String!`)
  """
  name_expr: String_Expr
  """
  ✨ Generated from Field `Budget`.`startDate` of type `Date!`
  """
  startDate: Date
  """
  ✨ `_date` server value variant of `startDate` (✨ Generated from Field `Budget`.`startDate` of type `Date!`)
  """
  startDate_date: Date_Relative
  """
  ✨ `_expr` server value variant of `startDate` (✨ Generated from Field `Budget`.`startDate` of type `Date!`)
  """
  startDate_expr: Date_Expr
  """
  ✨ `_update` server value variant of `startDate` (✨ Generated from Field `Budget`.`startDate` of type `Date!`)
  """
  startDate_update: [Date_Update!]
}
"""
✨ Generated filter input type for table 'Budget'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Budget_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Budget_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Budget_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Budget_Filter!]
  """
  ✨ Generated from Field `Budget`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Budget`.`categoryId` of type `UUID!`
  """
  categoryId: UUID_Filter
  """
  ✨ Generated from Field `Budget`.`userId` of type `UUID!`
  """
  userId: UUID_Filter
  """
  ✨ Generated from Field `Budget`.`category` of type `Category!`
  """
  category: Category_Filter
  """
  ✨ Generated from Field `Budget`.`user` of type `User!`
  """
  user: User_Filter
  """
  ✨ Generated from Field `Budget`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `Budget`.`description` of type `String`
  """
  description: String_Filter
  """
  ✨ Generated from Field `Budget`.`endDate` of type `Date!`
  """
  endDate: Date_Filter
  """
  ✨ Generated from Field `Budget`.`limitAmount` of type `Float!`
  """
  limitAmount: Float_Filter
  """
  ✨ Generated from Field `Budget`.`name` of type `String!`
  """
  name: String_Filter
  """
  ✨ Generated from Field `Budget`.`startDate` of type `Date!`
  """
  startDate: Date_Filter
}
"""
✨ Generated first-row input type for table 'Budget'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Budget_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Budget_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Budget_Filter
}
"""
✨ Generated having input type for table 'Budget'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Budget_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Budget_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Budget_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Budget_Having!]
  """
  ✨ Generated from Field `Budget`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Budget`.`categoryId_count` of type `Int!`
  """
  categoryId_count: Int_Filter
  """
  ✨ Generated from Field `Budget`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `Budget`.`description_count` of type `Int!`
  """
  description_count: Int_Filter
  """
  ✨ Generated from Field `Budget`.`endDate_count` of type `Int!`
  """
  endDate_count: Int_Filter
  """
  ✨ Generated from Field `Budget`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Budget`.`limitAmount_count` of type `Int!`
  """
  limitAmount_count: Int_Filter
  """
  ✨ Generated from Field `Budget`.`name_count` of type `Int!`
  """
  name_count: Int_Filter
  """
  ✨ Generated from Field `Budget`.`startDate_count` of type `Int!`
  """
  startDate_count: Int_Filter
  """
  ✨ Generated from Field `Budget`.`userId_count` of type `Int!`
  """
  userId_count: Int_Filter
  """
  ✨ Generated from Field `Budget`.`limitAmount_sum` of type `Float`
  """
  limitAmount_sum: Float_Filter
  """
  ✨ Generated from Field `Budget`.`limitAmount_avg` of type `Float`
  """
  limitAmount_avg: Float_Filter
  """
  ✨ Generated from Field `Budget`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Budget`.`endDate_min` of type `Date`
  """
  endDate_min: Date_Filter
  """
  ✨ Generated from Field `Budget`.`limitAmount_min` of type `Float`
  """
  limitAmount_min: Float_Filter
  """
  ✨ Generated from Field `Budget`.`startDate_min` of type `Date`
  """
  startDate_min: Date_Filter
  """
  ✨ Generated from Field `Budget`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `Budget`.`endDate_max` of type `Date`
  """
  endDate_max: Date_Filter
  """
  ✨ Generated from Field `Budget`.`limitAmount_max` of type `Float`
  """
  limitAmount_max: Float_Filter
  """
  ✨ Generated from Field `Budget`.`startDate_max` of type `Date`
  """
  startDate_max: Date_Filter
}
"""
✨ Generated key input type for table 'Budget'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Budget_Key {
  """
  ✨ Generated from Field `Budget`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Budget`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Budget'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Budget_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Budget_Filter
}
"""
✨ Generated order input type for table 'Budget'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Budget_Order {
  """
  ✨ Generated from Field `Budget`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Budget`.`categoryId` of type `UUID!`
  """
  categoryId: OrderDirection
  """
  ✨ Generated from Field `Budget`.`userId` of type `UUID!`
  """
  userId: OrderDirection
  """
  ✨ Generated from Field `Budget`.`category` of type `Category!`
  """
  category: Category_Order
  """
  ✨ Generated from Field `Budget`.`user` of type `User!`
  """
  user: User_Order
  """
  ✨ Generated from Field `Budget`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `Budget`.`description` of type `String`
  """
  description: OrderDirection
  """
  ✨ Generated from Field `Budget`.`endDate` of type `Date!`
  """
  endDate: OrderDirection
  """
  ✨ Generated from Field `Budget`.`limitAmount` of type `Float!`
  """
  limitAmount: OrderDirection
  """
  ✨ Generated from Field `Budget`.`name` of type `String!`
  """
  name: OrderDirection
  """
  ✨ Generated from Field `Budget`.`startDate` of type `Date!`
  """
  startDate: OrderDirection
  """
  ✨ Generated from Field `Budget`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `Budget`.`categoryId_count` of type `Int!`
  """
  categoryId_count: OrderDirection
  """
  ✨ Generated from Field `Budget`.`createdAt_count` of type `Int!`
  """
  createdAt_count: OrderDirection
  """
  ✨ Generated from Field `Budget`.`description_count` of type `Int!`
  """
  description_count: OrderDirection
  """
  ✨ Generated from Field `Budget`.`endDate_count` of type `Int!`
  """
  endDate_count: OrderDirection
  """
  ✨ Generated from Field `Budget`.`id_count` of type `Int!`
  """
  id_count: OrderDirection
  """
  ✨ Generated from Field `Budget`.`limitAmount_count` of type `Int!`
  """
  limitAmount_count: OrderDirection
  """
  ✨ Generated from Field `Budget`.`name_count` of type `Int!`
  """
  name_count: OrderDirection
  """
  ✨ Generated from Field `Budget`.`startDate_count` of type `Int!`
  """
  startDate_count: OrderDirection
  """
  ✨ Generated from Field `Budget`.`userId_count` of type `Int!`
  """
  userId_count: OrderDirection
  """
  ✨ Generated from Field `Budget`.`limitAmount_sum` of type `Float`
  """
  limitAmount_sum: OrderDirection
  """
  ✨ Generated from Field `Budget`.`limitAmount_avg` of type `Float`
  """
  limitAmount_avg: OrderDirection
  """
  ✨ Generated from Field `Budget`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: OrderDirection
  """
  ✨ Generated from Field `Budget`.`endDate_min` of type `Date`
  """
  endDate_min: OrderDirection
  """
  ✨ Generated from Field `Budget`.`limitAmount_min` of type `Float`
  """
  limitAmount_min: OrderDirection
  """
  ✨ Generated from Field `Budget`.`startDate_min` of type `Date`
  """
  startDate_min: OrderDirection
  """
  ✨ Generated from Field `Budget`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: OrderDirection
  """
  ✨ Generated from Field `Budget`.`endDate_max` of type `Date`
  """
  endDate_max: OrderDirection
  """
  ✨ Generated from Field `Budget`.`limitAmount_max` of type `Float`
  """
  limitAmount_max: OrderDirection
  """
  ✨ Generated from Field `Budget`.`startDate_max` of type `Date`
  """
  startDate_max: OrderDirection
}
"""
✨ Generated data input type for table 'Category'. It includes all necessary fields for creating or upserting rows into table.
"""
input Category_Data {
  """
  ✨ Generated from Field `Category`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Category`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Category`.`userId` of type `UUID!`
  """
  userId: UUID
  """
  ✨ `_expr` server value variant of `userId` (✨ Generated from Field `Category`.`userId` of type `UUID!`)
  """
  userId_expr: UUID_Expr
  """
  ✨ Generated from Field `Category`.`user` of type `User!`
  """
  user: User_Key
  """
  ✨ Generated from Field `Category`.`categoryType` of type `String!`
  """
  categoryType: String
  """
  ✨ `_expr` server value variant of `categoryType` (✨ Generated from Field `Category`.`categoryType` of type `String!`)
  """
  categoryType_expr: String_Expr
  """
  ✨ Generated from Field `Category`.`description` of type `String`
  """
  description: String
  """
  ✨ `_expr` server value variant of `description` (✨ Generated from Field `Category`.`description` of type `String`)
  """
  description_expr: String_Expr
  """
  ✨ Generated from Field `Category`.`name` of type `String!`
  """
  name: String
  """
  ✨ `_expr` server value variant of `name` (✨ Generated from Field `Category`.`name` of type `String!`)
  """
  name_expr: String_Expr
}
"""
✨ Generated filter input type for table 'Category'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Category_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Category_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Category_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Category_Filter!]
  """
  ✨ Generated from Field `Category`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Category`.`userId` of type `UUID!`
  """
  userId: UUID_Filter
  """
  ✨ Generated from Field `Category`.`user` of type `User!`
  """
  user: User_Filter
  """
  ✨ Generated from Field `Category`.`categoryType` of type `String!`
  """
  categoryType: String_Filter
  """
  ✨ Generated from Field `Category`.`description` of type `String`
  """
  description: String_Filter
  """
  ✨ Generated from Field `Category`.`name` of type `String!`
  """
  name: String_Filter
  """
  ✨ Generated from Field `Category`.`budgets_on_category` of type `[Budget!]!`
  """
  budgets_on_category: Budget_ListFilter
  """
  ✨ Generated from Field `Category`.`transactions_on_category` of type `[Transaction!]!`
  """
  transactions_on_category: Transaction_ListFilter
}
"""
✨ Generated first-row input type for table 'Category'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Category_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Category_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Category_Filter
}
"""
✨ Generated having input type for table 'Category'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Category_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Category_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Category_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Category_Having!]
  """
  ✨ Generated from Field `Category`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Category`.`categoryType_count` of type `Int!`
  """
  categoryType_count: Int_Filter
  """
  ✨ Generated from Field `Category`.`description_count` of type `Int!`
  """
  description_count: Int_Filter
  """
  ✨ Generated from Field `Category`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Category`.`name_count` of type `Int!`
  """
  name_count: Int_Filter
  """
  ✨ Generated from Field `Category`.`userId_count` of type `Int!`
  """
  userId_count: Int_Filter
}
"""
✨ Generated key input type for table 'Category'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Category_Key {
  """
  ✨ Generated from Field `Category`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Category`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Category'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Category_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Category_Filter
}
"""
✨ Generated order input type for table 'Category'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Category_Order {
  """
  ✨ Generated from Field `Category`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Category`.`userId` of type `UUID!`
  """
  userId: OrderDirection
  """
  ✨ Generated from Field `Category`.`user` of type `User!`
  """
  user: User_Order
  """
  ✨ Generated from Field `Category`.`categoryType` of type `String!`
  """
  categoryType: OrderDirection
  """
  ✨ Generated from Field `Category`.`description` of type `String`
  """
  description: OrderDirection
  """
  ✨ Generated from Field `Category`.`name` of type `String!`
  """
  name: OrderDirection
  """
  ✨ Generated from Field `Category`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `Category`.`categoryType_count` of type `Int!`
  """
  categoryType_count: OrderDirection
  """
  ✨ Generated from Field `Category`.`description_count` of type `Int!`
  """
  description_count: OrderDirection
  """
  ✨ Generated from Field `Category`.`id_count` of type `Int!`
  """
  id_count: OrderDirection
  """
  ✨ Generated from Field `Category`.`name_count` of type `Int!`
  """
  name_count: OrderDirection
  """
  ✨ Generated from Field `Category`.`userId_count` of type `Int!`
  """
  userId_count: OrderDirection
}
"""
✨ Generated data input type for table 'Transaction'. It includes all necessary fields for creating or upserting rows into table.
"""
input Transaction_Data {
  """
  ✨ Generated from Field `Transaction`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Transaction`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Transaction`.`accountId` of type `UUID!`
  """
  accountId: UUID
  """
  ✨ `_expr` server value variant of `accountId` (✨ Generated from Field `Transaction`.`accountId` of type `UUID!`)
  """
  accountId_expr: UUID_Expr
  """
  ✨ Generated from Field `Transaction`.`categoryId` of type `UUID`
  """
  categoryId: UUID
  """
  ✨ `_expr` server value variant of `categoryId` (✨ Generated from Field `Transaction`.`categoryId` of type `UUID`)
  """
  categoryId_expr: UUID_Expr
  """
  ✨ Generated from Field `Transaction`.`userId` of type `UUID!`
  """
  userId: UUID
  """
  ✨ `_expr` server value variant of `userId` (✨ Generated from Field `Transaction`.`userId` of type `UUID!`)
  """
  userId_expr: UUID_Expr
  """
  ✨ Generated from Field `Transaction`.`account` of type `Account!`
  """
  account: Account_Key
  """
  ✨ Generated from Field `Transaction`.`category` of type `Category`
  """
  category: Category_Key
  """
  ✨ Generated from Field `Transaction`.`user` of type `User!`
  """
  user: User_Key
  """
  ✨ Generated from Field `Transaction`.`amount` of type `Float!`
  """
  amount: Float
  """
  ✨ `_expr` server value variant of `amount` (✨ Generated from Field `Transaction`.`amount` of type `Float!`)
  """
  amount_expr: Float_Expr
  """
  ✨ `_update` server value variant of `amount` (✨ Generated from Field `Transaction`.`amount` of type `Float!`)
  """
  amount_update: [Float_Update!]
  """
  ✨ Generated from Field `Transaction`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `Transaction`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `Transaction`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `Transaction`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Transaction`.`date` of type `Date!`
  """
  date: Date
  """
  ✨ `_date` server value variant of `date` (✨ Generated from Field `Transaction`.`date` of type `Date!`)
  """
  date_date: Date_Relative
  """
  ✨ `_expr` server value variant of `date` (✨ Generated from Field `Transaction`.`date` of type `Date!`)
  """
  date_expr: Date_Expr
  """
  ✨ `_update` server value variant of `date` (✨ Generated from Field `Transaction`.`date` of type `Date!`)
  """
  date_update: [Date_Update!]
  """
  ✨ Generated from Field `Transaction`.`description` of type `String!`
  """
  description: String
  """
  ✨ `_expr` server value variant of `description` (✨ Generated from Field `Transaction`.`description` of type `String!`)
  """
  description_expr: String_Expr
  """
  ✨ Generated from Field `Transaction`.`merchant` of type `String`
  """
  merchant: String
  """
  ✨ `_expr` server value variant of `merchant` (✨ Generated from Field `Transaction`.`merchant` of type `String`)
  """
  merchant_expr: String_Expr
  """
  ✨ Generated from Field `Transaction`.`transactionType` of type `String!`
  """
  transactionType: String
  """
  ✨ `_expr` server value variant of `transactionType` (✨ Generated from Field `Transaction`.`transactionType` of type `String!`)
  """
  transactionType_expr: String_Expr
}
"""
✨ Generated filter input type for table 'Transaction'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Transaction_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Transaction_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Transaction_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Transaction_Filter!]
  """
  ✨ Generated from Field `Transaction`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Transaction`.`accountId` of type `UUID!`
  """
  accountId: UUID_Filter
  """
  ✨ Generated from Field `Transaction`.`categoryId` of type `UUID`
  """
  categoryId: UUID_Filter
  """
  ✨ Generated from Field `Transaction`.`userId` of type `UUID!`
  """
  userId: UUID_Filter
  """
  ✨ Generated from Field `Transaction`.`account` of type `Account!`
  """
  account: Account_Filter
  """
  ✨ Generated from Field `Transaction`.`category` of type `Category`
  """
  category: Category_Filter
  """
  ✨ Generated from Field `Transaction`.`user` of type `User!`
  """
  user: User_Filter
  """
  ✨ Generated from Field `Transaction`.`amount` of type `Float!`
  """
  amount: Float_Filter
  """
  ✨ Generated from Field `Transaction`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `Transaction`.`date` of type `Date!`
  """
  date: Date_Filter
  """
  ✨ Generated from Field `Transaction`.`description` of type `String!`
  """
  description: String_Filter
  """
  ✨ Generated from Field `Transaction`.`merchant` of type `String`
  """
  merchant: String_Filter
  """
  ✨ Generated from Field `Transaction`.`transactionType` of type `String!`
  """
  transactionType: String_Filter
}
"""
✨ Generated first-row input type for table 'Transaction'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Transaction_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Transaction_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Transaction_Filter
}
"""
✨ Generated having input type for table 'Transaction'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Transaction_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Transaction_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Transaction_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Transaction_Having!]
  """
  ✨ Generated from Field `Transaction`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Transaction`.`accountId_count` of type `Int!`
  """
  accountId_count: Int_Filter
  """
  ✨ Generated from Field `Transaction`.`amount_count` of type `Int!`
  """
  amount_count: Int_Filter
  """
  ✨ Generated from Field `Transaction`.`categoryId_count` of type `Int!`
  """
  categoryId_count: Int_Filter
  """
  ✨ Generated from Field `Transaction`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `Transaction`.`date_count` of type `Int!`
  """
  date_count: Int_Filter
  """
  ✨ Generated from Field `Transaction`.`description_count` of type `Int!`
  """
  description_count: Int_Filter
  """
  ✨ Generated from Field `Transaction`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Transaction`.`merchant_count` of type `Int!`
  """
  merchant_count: Int_Filter
  """
  ✨ Generated from Field `Transaction`.`transactionType_count` of type `Int!`
  """
  transactionType_count: Int_Filter
  """
  ✨ Generated from Field `Transaction`.`userId_count` of type `Int!`
  """
  userId_count: Int_Filter
  """
  ✨ Generated from Field `Transaction`.`amount_sum` of type `Float`
  """
  amount_sum: Float_Filter
  """
  ✨ Generated from Field `Transaction`.`amount_avg` of type `Float`
  """
  amount_avg: Float_Filter
  """
  ✨ Generated from Field `Transaction`.`amount_min` of type `Float`
  """
  amount_min: Float_Filter
  """
  ✨ Generated from Field `Transaction`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Transaction`.`date_min` of type `Date`
  """
  date_min: Date_Filter
  """
  ✨ Generated from Field `Transaction`.`amount_max` of type `Float`
  """
  amount_max: Float_Filter
  """
  ✨ Generated from Field `Transaction`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `Transaction`.`date_max` of type `Date`
  """
  date_max: Date_Filter
}
"""
✨ Generated key input type for table 'Transaction'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Transaction_Key {
  """
  ✨ Generated from Field `Transaction`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Transaction`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Transaction'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Transaction_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Transaction_Filter
}
"""
✨ Generated order input type for table 'Transaction'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Transaction_Order {
  """
  ✨ Generated from Field `Transaction`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Transaction`.`accountId` of type `UUID!`
  """
  accountId: OrderDirection
  """
  ✨ Generated from Field `Transaction`.`categoryId` of type `UUID`
  """
  categoryId: OrderDirection
  """
  ✨ Generated from Field `Transaction`.`userId` of type `UUID!`
  """
  userId: OrderDirection
  """
  ✨ Generated from Field `Transaction`.`account` of type `Account!`
  """
  account: Account_Order
  """
  ✨ Generated from Field `Transaction`.`category` of type `Category`
  """
  category: Category_Order
  """
  ✨ Generated from Field `Transaction`.`user` of type `User!`
  """
  user: User_Order
  """
  ✨ Generated from Field `Transaction`.`amount` of type `Float!`
  """
  amount: OrderDirection
  """
  ✨ Generated from Field `Transaction`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `Transaction`.`date` of type `Date!`
  """
  date: OrderDirection
  """
  ✨ Generated from Field `Transaction`.`description` of type `String!`
  """
  description: OrderDirection
  """
  ✨ Generated from Field `Transaction`.`merchant` of type `String`
  """
  merchant: OrderDirection
  """
  ✨ Generated from Field `Transaction`.`transactionType` of type `String!`
  """
  transactionType: OrderDirection
  """
  ✨ Generated from Field `Transaction`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `Transaction`.`accountId_count` of type `Int!`
  """
  accountId_count: OrderDirection
  """
  ✨ Generated from Field `Transaction`.`amount_count` of type `Int!`
  """
  amount_count: OrderDirection
  """
  ✨ Generated from Field `Transaction`.`categoryId_count` of type `Int!`
  """
  categoryId_count: OrderDirection
  """
  ✨ Generated from Field `Transaction`.`createdAt_count` of type `Int!`
  """
  createdAt_count: OrderDirection
  """
  ✨ Generated from Field `Transaction`.`date_count` of type `Int!`
  """
  date_count: OrderDirection
  """
  ✨ Generated from Field `Transaction`.`description_count` of type `Int!`
  """
  description_count: OrderDirection
  """
  ✨ Generated from Field `Transaction`.`id_count` of type `Int!`
  """
  id_count: OrderDirection
  """
  ✨ Generated from Field `Transaction`.`merchant_count` of type `Int!`
  """
  merchant_count: OrderDirection
  """
  ✨ Generated from Field `Transaction`.`transactionType_count` of type `Int!`
  """
  transactionType_count: OrderDirection
  """
  ✨ Generated from Field `Transaction`.`userId_count` of type `Int!`
  """
  userId_count: OrderDirection
  """
  ✨ Generated from Field `Transaction`.`amount_sum` of type `Float`
  """
  amount_sum: OrderDirection
  """
  ✨ Generated from Field `Transaction`.`amount_avg` of type `Float`
  """
  amount_avg: OrderDirection
  """
  ✨ Generated from Field `Transaction`.`amount_min` of type `Float`
  """
  amount_min: OrderDirection
  """
  ✨ Generated from Field `Transaction`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: OrderDirection
  """
  ✨ Generated from Field `Transaction`.`date_min` of type `Date`
  """
  date_min: OrderDirection
  """
  ✨ Generated from Field `Transaction`.`amount_max` of type `Float`
  """
  amount_max: OrderDirection
  """
  ✨ Generated from Field `Transaction`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: OrderDirection
  """
  ✨ Generated from Field `Transaction`.`date_max` of type `Date`
  """
  date_max: OrderDirection
}
"""
✨ Generated data input type for table 'User'. It includes all necessary fields for creating or upserting rows into table.
"""
input User_Data {
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `User`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `User`.`email` of type `String!`
  """
  email: String
  """
  ✨ `_expr` server value variant of `email` (✨ Generated from Field `User`.`email` of type `String!`)
  """
  email_expr: String_Expr
  """
  ✨ Generated from Field `User`.`firstName` of type `String`
  """
  firstName: String
  """
  ✨ `_expr` server value variant of `firstName` (✨ Generated from Field `User`.`firstName` of type `String`)
  """
  firstName_expr: String_Expr
  """
  ✨ Generated from Field `User`.`hashedPassword` of type `String!`
  """
  hashedPassword: String
  """
  ✨ `_expr` server value variant of `hashedPassword` (✨ Generated from Field `User`.`hashedPassword` of type `String!`)
  """
  hashedPassword_expr: String_Expr
  """
  ✨ Generated from Field `User`.`lastName` of type `String`
  """
  lastName: String
  """
  ✨ `_expr` server value variant of `lastName` (✨ Generated from Field `User`.`lastName` of type `String`)
  """
  lastName_expr: String_Expr
}
"""
✨ Generated filter input type for table 'User'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input User_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [User_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: User_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [User_Filter!]
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`email` of type `String!`
  """
  email: String_Filter
  """
  ✨ Generated from Field `User`.`firstName` of type `String`
  """
  firstName: String_Filter
  """
  ✨ Generated from Field `User`.`hashedPassword` of type `String!`
  """
  hashedPassword: String_Filter
  """
  ✨ Generated from Field `User`.`lastName` of type `String`
  """
  lastName: String_Filter
  """
  ✨ Generated from Field `User`.`accounts_on_user` of type `[Account!]!`
  """
  accounts_on_user: Account_ListFilter
  """
  ✨ Generated from Field `User`.`budgets_on_user` of type `[Budget!]!`
  """
  budgets_on_user: Budget_ListFilter
  """
  ✨ Generated from Field `User`.`categories_on_user` of type `[Category!]!`
  """
  categories_on_user: Category_ListFilter
  """
  ✨ Generated from Field `User`.`transactions_on_user` of type `[Transaction!]!`
  """
  transactions_on_user: Transaction_ListFilter
}
"""
✨ Generated first-row input type for table 'User'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input User_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [User_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: User_Filter
}
"""
✨ Generated having input type for table 'User'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input User_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [User_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: User_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [User_Having!]
  """
  ✨ Generated from Field `User`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `User`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `User`.`email_count` of type `Int!`
  """
  email_count: Int_Filter
  """
  ✨ Generated from Field `User`.`firstName_count` of type `Int!`
  """
  firstName_count: Int_Filter
  """
  ✨ Generated from Field `User`.`hashedPassword_count` of type `Int!`
  """
  hashedPassword_count: Int_Filter
  """
  ✨ Generated from Field `User`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `User`.`lastName_count` of type `Int!`
  """
  lastName_count: Int_Filter
  """
  ✨ Generated from Field `User`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'User'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input User_Key {
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `User`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'User'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input User_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: User_Filter
}
"""
✨ Generated order input type for table 'User'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input User_Order {
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `User`.`email` of type `String!`
  """
  email: OrderDirection
  """
  ✨ Generated from Field `User`.`firstName` of type `String`
  """
  firstName: OrderDirection
  """
  ✨ Generated from Field `User`.`hashedPassword` of type `String!`
  """
  hashedPassword: OrderDirection
  """
  ✨ Generated from Field `User`.`lastName` of type `String`
  """
  lastName: OrderDirection
  """
  ✨ Generated from Field `User`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `User`.`createdAt_count` of type `Int!`
  """
  createdAt_count: OrderDirection
  """
  ✨ Generated from Field `User`.`email_count` of type `Int!`
  """
  email_count: OrderDirection
  """
  ✨ Generated from Field `User`.`firstName_count` of type `Int!`
  """
  firstName_count: OrderDirection
  """
  ✨ Generated from Field `User`.`hashedPassword_count` of type `Int!`
  """
  hashedPassword_count: OrderDirection
  """
  ✨ Generated from Field `User`.`id_count` of type `Int!`
  """
  id_count: OrderDirection
  """
  ✨ Generated from Field `User`.`lastName_count` of type `Int!`
  """
  lastName_count: OrderDirection
  """
  ✨ Generated from Field `User`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: OrderDirection
  """
  ✨ Generated from Field `User`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: OrderDirection
}
