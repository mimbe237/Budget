{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the BudgetWise application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user."
        },
        "email": {
          "type": "string",
          "description": "Email address of the user.",
          "format": "email"
        },
        "firstName": {
          "type": "string",
          "description": "First name of the user."
        },
        "lastName": {
          "type": "string",
          "description": "Last name of the user."
        }
      },
      "required": [
        "id",
        "email",
        "firstName",
        "lastName"
      ]
    },
    "Expense": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Expense",
      "type": "object",
      "description": "Represents an expense made by a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the expense."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Expense)"
        },
        "categoryId": {
          "type": "string",
          "description": "Reference to Category. (Relationship: Category 1:N Expense)"
        },
        "amount": {
          "type": "number",
          "description": "The amount of the expense."
        },
        "date": {
          "type": "string",
          "description": "The date of the expense.",
          "format": "date-time"
        },
        "description": {
          "type": "string",
          "description": "Description of the expense."
        }
      },
      "required": [
        "id",
        "userId",
        "categoryId",
        "amount",
        "date",
        "description"
      ]
    },
    "Category": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Category",
      "type": "object",
      "description": "Represents a category for expenses.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the category."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Category)"
        },
        "name": {
          "type": "string",
          "description": "Name of the category (e.g., 'Food', 'Housing', 'Transport')."
        },
        "budgetedAmount": {
          "type": "number",
          "description": "The budgeted amount for this category."
        }
      },
      "required": [
        "id",
        "userId",
        "name",
        "budgetedAmount"
      ]
    },
    "BudgetGoal": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "BudgetGoal",
      "type": "object",
      "description": "Represents a financial goal set by a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the budget goal."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N BudgetGoal)"
        },
        "name": {
          "type": "string",
          "description": "Name of the goal (e.g., 'Save for a house', 'Pay off debt')."
        },
        "targetAmount": {
          "type": "number",
          "description": "The target amount for the goal."
        },
        "currentAmount": {
          "type": "number",
          "description": "The current amount saved towards the goal."
        },
        "targetDate": {
          "type": "string",
          "description": "The target date for achieving the goal.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "name",
        "targetAmount",
        "currentAmount",
        "targetDate"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profile information.  Authorization is based on the `userId` path parameter, ensuring only the user can access their own profile.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/expenses/{expenseId}",
        "definition": {
          "entityName": "Expense",
          "schema": {
            "$ref": "#/backend/entities/Expense"
          },
          "description": "Stores expense data for a specific user. Authorization is based on the `userId` path parameter, ensuring only the user can access their own expenses.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "expenseId",
              "description": "The unique identifier of the expense."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/categories/{categoryId}",
        "definition": {
          "entityName": "Category",
          "schema": {
            "$ref": "#/backend/entities/Category"
          },
          "description": "Stores expense categories for a specific user. Authorization is based on the `userId` path parameter, ensuring only the user can access their own categories.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "categoryId",
              "description": "The unique identifier of the category."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/budgetGoals/{budgetGoalId}",
        "definition": {
          "entityName": "BudgetGoal",
          "schema": {
            "$ref": "#/backend/entities/BudgetGoal"
          },
          "description": "Stores budget goals for a specific user. Authorization is based on the `userId` path parameter, ensuring only the user can access their own budget goals.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "budgetGoalId",
              "description": "The unique identifier of the budget goal."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to ensure Authorization Independence, support QAPs (queries are not filters), and maintain data clarity.  It leverages path-based ownership for user-specific data, eliminating the need for `get()` calls in security rules.  Each document stores all necessary authorization data within itself (or derives it from its path), enabling atomic operations and simplified security rules.\n\nExpenses, Categories, and BudgetGoals are stored as subcollections under each user's document, enforcing clear ownership and enabling secure list operations (QAPs).  This segregation ensures that only the authenticated user can access their own data. There is no need for denormalization because of the use of path-based authorization."
  }
}